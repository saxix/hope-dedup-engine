version: '3.8'

volumes:
  postgres_data:
  hope_postgres_data:

services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    command: |
      sh -c "
        entrypoint.sh ./wait-for-it.sh db:5432
        python3 manage.py upgrade
        entrypoint.sh dev
      "
    env_file:
      - .env
    ports:
      - 8000:8000
    volumes:
      - .:/code
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://backend:8000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  db:
    image: postgres:15
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - 5432:5432
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 5s
      start_interval: 1s
      interval: 5s
      timeout: 4s
      retries: 5

  hopedb:
    image: postgis/postgis:15-3.4
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=hopedb
    volumes:
      - hope_postgres_data:/var/lib/postgresql/data/
    restart: always
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      start_period: 5s
      interval: 5s
      timeout: 4s
      retries: 5

  redis:
    image: redis:7.2
    ports:
      - 6379:6379
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      start_period: 5s
      start_interval: 1s
      interval: 5s
      timeout: 4s
      retries: 5

  celery_worker:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    command: |
      sh -c "
        entrypoint.sh ./wait-for-it.sh db:5432
        entrypoint.sh celery_worker
      "
    env_file:
      - .env
    volumes:
      - .:/code
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  celery_beat:
    build:
      context: .
      dockerfile: Dockerfile
      target: dev
    command: |
      sh -c "
        entrypoint.sh ./wait-for-it.sh db:5432
        entrypoint.sh celery_beat
      "
    env_file:
      - .env
    volumes:
      - .:/code
    restart: unless-stopped
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy