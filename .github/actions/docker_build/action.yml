# ref: https://docs.github.com/en/actions/creating-actions/creating-a-docker-container-action
name: 'Docker build'
description: 'Calculate deps and os hash'
inputs:
  image:
    description: "Image name to build and push"
    required: true
    type: string
    default: false
  cache-from:
    description: "Image name to build and push"
    required: false
    type: string
  checksum:
    description: "Dependencies checksum to check to evaluate build"
    required: false
    type: string
    default: false
  target:
    description: "Dockerfile stage to stop to"
    required: true
    type: string
    default: "-"
  force:
    description: "Force rebuild event is checksum matches"
    required: false
    type: boolean
    default: false
  dry_run:
    description: "Force rebuild event is checksum matches"
    required: false
    type: boolean
    default: false
  username:
    description: 'DockerHub username '
    required: false
  password:
    description: 'DockerHub password '
    required: false
  token:
    description: 'DockerHub password '
    required: false


defaults:
  run:
    shell: bash


outputs:
#  checksum:
#    description: 'Returns true if the image exists and the checksum is valid'
#    value: ${{ steps.release_hash.outputs.hash}}
#  version:
#    description: 'Returns true if the image exists'
#    value: ${{ steps.image_updated.outputs.version }}
#  build_number:
#    description: 'Returns build number for the current branch'
#    value: ${{ steps.image_updated.outputs.build_number }}
#  build_date:
#    description: 'Returns tha image build date'
#    value: ${{ steps.setup.outputs.date }}
#  commit:
#    description: 'Returns tha image build date'
#    value: ${{ env.LAST_COMMIT_SHA }}

runs:
  using: 'composite'
  steps:
    - name: Prepare Build Args
      id: build_args
      uses: ./.github/actions/build_args
    - run: echo 11111111111111, ${{toJSON(steps.build_args.outputs.args)}}
    - name: DockerHub login
      uses: docker/login-action@v3
      with:
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: linux/amd64
        driver: docker-container
        driver-opts: 'image=moby/buildkit:v0.13.2'
    - name: Build and push
#      if: ${{ steps.image_updated.outputs.updated != 'true' || inputs.force == 'true' }}
      uses: docker/build-push-action@v5
      with:
        context: .
        tags: ${{ inputs.image }}
        target: ${{ inputs.target }}
        file: ./docker/Dockerfile
        platforms: linux/amd64
        outputs: type=registry
        cache-from: "type=registry,ref=${{inputs.image}}-buildcache,mode=max"
        cache-to: "type=registry,ref=${{inputs.image}}-buildcache,mode=max"
#        labels: BuildNumber=${{ steps.setup.outputs.build_number }},
        build-args: ${{toJSON(steps.build_args.outputs.args)}}
#        build-args: |
#          BUILD_DATE=${{ steps.build_args.outputs.BUILD_DATE }}
#          CHECKSUM=${{ steps.build_args.outputs.CHECKSUM }}
#          VERSION=${{ steps.build_args.outputs.VERSION }}
#          SOURCE_COMMIT=${{ steps.build_args.outputs.SOURCE_COMMIT }}
#          GITHUB_SERVER_URL=${{ github.server_url }}
#          GITHUB_REPOSITORY=${{ github.repository }}
    - name: Dump Image Info
      shell: bash
      run: |
        echo "Pulling... ${{ inputs.image }}"
        docker pull --platform linux/amd64 ${{ inputs.image }}
        docker inspect --format='{{json .Config.Labels}}' ${{ inputs.image }}
        docker run --platform linux/amd64 -t ${{ inputs.image }} release-info.sh
        echo "----------"
